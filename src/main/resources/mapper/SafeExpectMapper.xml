<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.security.info.manage.mapper.SafeExpectMapper">

    <select id="listSafeExpect" resultType="com.security.info.manage.dto.res.SafeExpectResDTO">
        select se.id, se.user_id, ue.real_name as user_name, se.address, se.time, se.work_id,
        se.work_no, se.work_name, se.work_region, se.status from t_safe_expect as se
        left join sys_user_ext as ue on ue.user_id=se.user_id and ue.is_delete=0 and ue.status=0
        where se.is_delete=0
        order by se.create_date desc
    </select>

    <select id="vxListSafeExpect" resultType="com.security.info.manage.dto.res.SafeExpectResDTO">
        select se.id, se.user_id, ue.real_name as user_name, se.address, se.time, se.work_id,
        se.work_no, se.work_name, se.work_region, se.status from t_safe_expect as se
        left join sys_user_ext as ue on ue.user_id=se.user_id and ue.is_delete=0 and ue.status=0
        left join t_safe_expect_user as seu on seu.safe_expect_id=se.id
        where se.is_delete=0 and (se.user_id=#{userId} or seu.user_id=#{userId})
        order by se.create_date desc
    </select>

    <select id="getSafeExpectDetail" resultType="com.security.info.manage.dto.res.SafeExpectResDTO">
        select se.id, se.user_id, ue.real_name as user_name, se.address, se.time, se.work_id,
        se.work_no, se.work_name, se.work_region, se.status, group_concat(ue1.real_name) as user_names
        from t_safe_expect as se
        left join sys_user_ext as ue on ue.user_id=se.user_id and ue.is_delete=0 and ue.status=0
        left join t_safe_expect_user as seu on seu.safe_expect_id=se.id
        left join sys_user_ext as ue1 on ue1.user_id=seu.user_id and ue1.is_delete=0 and ue1.status=0
        where se.is_delete=0 and se.id=#{id}
        group by se.id
    </select>

    <select id="getSafeExpectInfoDetail" resultType="com.security.info.manage.dto.res.SafeExpectInfoResDTO">
        select s.id, s.safe_expect_id, s.weather, s.work_temperature, s.wind_power, s.relative_humidity, s.work_content,
        s.work_environment, s.safe_tools, s.transport_modes, s.overhaul_equipment_status,
        s.describe_person_factor, s.describe_object_factor, s.describe_environment_factor, s.describe_manage_factor,
        s.describe_may_occur, s.describe_occupational_hazards, s.risk_level, rl.name as risk_level_name,
        rl.chromatography as risk_level_color, s.risk_control_measures, s.work_attention_matter, s.safe_technical_disclosure
        from t_safe_expect_info as s
        left join sys_risk_level as rl on rl.id=s.risk_level
        where s.is_delete=0 and s.safe_expect_id=#{id}
        group by s.id
    </select>

    <select id="exportSafeExpectInfo" resultType="com.security.info.manage.dto.res.SafeExpectInfoResDTO">
        select s.id, s.safe_expect_id, s.weather, s.work_temperature, s.wind_power, s.relative_humidity, s.work_content, s.work_environment,
        group_concat(distinct r.name) as safe_tools, group_concat(distinct t.name) as transport_modes, s.overhaul_equipment_status, s.describe_person_factor,
        s.describe_object_factor, s.describe_environment_factor, s.describe_manage_factor, group_concat(distinct a.name) as describe_may_occur,
        group_concat(distinct h.name) as describe_occupational_hazards, s.risk_level, rl.name as risk_level_name,
        rl.chromatography as risk_level_color, s.risk_control_measures, s.work_attention_matter, s.safe_technical_disclosure
        from t_safe_expect_info as s
        left join t_transport as t on find_in_set(t.id,s.transport_modes)>0 and t.is_delete=0
        left join t_risk_appliance as r on find_in_set(r.id,s.safe_tools)>0 and r.is_delete=0
        left join t_hazard_factor as h on find_in_set(h.id,s.describe_occupational_hazards)>0 and h.is_delete=0
        left join sys_accident as a on find_in_set(a.id,s.describe_may_occur)>0
        left join sys_risk_level as rl on rl.id=s.risk_level
        where s.is_delete=0 and s.safe_expect_id=#{id}
        group by s.id
        order by t.id, r.id, h.id, a.id
    </select>

    <select id="getSafeExpectCollectionUnionDetail" resultType="com.security.info.manage.dto.res.SafeExpectCollectionUnionResDTO">
        select id, safe_expect_id, task_completion, problem_measure, collection_union_time
        from t_safe_expect_collection_union
        where is_delete=0 and safe_expect_id=#{id}
    </select>

    <select id="getSafeExpectUserInfo" resultType="com.security.info.manage.entity.SafeExpectUser">
        select seu.id, seu.user_id, seu.safe_expect_id, seu.sign_time, ue.real_name as user_name,
        (case when now()>se.time and seu.is_sign!=-1 then 1 else 0 end) as is_absent, seu.is_sign
        from t_safe_expect_user as seu
        left join t_safe_expect as se on se.id=seu.safe_expect_id and se.is_delete=0
        left join sys_user_ext as ue on ue.user_id=seu.user_id and ue.is_delete=0 and ue.status=0
        where seu.safe_expect_id=#{id}
    </select>

    <select id="selectSafeExpectIsExist" resultType="java.lang.Integer">
        SELECT count(1) FROM t_safe_expect WHERE work_id=#{workId} and work_no=#{workNo} and is_delete=0
        <if test="id!=null">
            and id!=#{id}
        </if>
        limit 1
    </select>

    <insert id="addSafeExpect">
        INSERT INTO t_safe_expect (id, user_id, address, time, work_id, work_no, work_name, work_region, create_by)
        select #{id}, #{userId}, #{address}, #{time}, #{workId}, #{workNo}, #{workName}, #{workRegion}, #{createBy}
        FROM DUAL
        WHERE not exists (SELECT id FROM t_safe_expect WHERE work_id=#{workId} and work_no=#{workNo} and is_delete=0);
    </insert>

    <insert id="insertSafeExpectUser">
        delete from t_safe_expect_user where safe_expect_id=#{id};
        insert into t_safe_expect_user (id, user_id, safe_expect_id)
        values
        <foreach collection="list" index="index" item="userId" separator=",">
            (replace(uuid(),"-",""), #{userId}, #{id})
        </foreach>
    </insert>

    <insert id="modifySafeExpectInfo">
        INSERT INTO t_safe_expect_info (id, safe_expect_id, weather, work_temperature, wind_power, relative_humidity,
        work_content, work_environment, safe_tools, transport_modes, overhaul_equipment_status, describe_person_factor,
        describe_object_factor, describe_environment_factor, describe_manage_factor, describe_may_occur, describe_occupational_hazards,
        risk_level, risk_control_measures, work_attention_matter, safe_technical_disclosure, create_by)
        select replace(uuid(),"-",""), #{safeExpectId}, #{weather}, #{workTemperature}, #{windPower}, #{relativeHumidity},
        #{workContent}, #{workEnvironment}, #{safeTools}, #{transportModes}, #{overhaulEquipmentStatus}, #{describePersonFactor},
        #{describeObjectFactor}, #{describeEnvironmentFactor}, #{describeManageFactor}, #{describeMayOccur}, #{describeOccupationalHazards},
        #{riskLevel}, #{riskControlMeasures},  #{workAttentionMatter},  #{safeTechnicalDisclosure}, #{createBy}
        FROM DUAL
        WHERE not exists (SELECT id FROM t_safe_expect_info WHERE safe_expect_id=#{safeExpectId} and is_delete=0);
        update t_safe_expect_info set
        weather=#{weather}, work_temperature=#{workTemperature}, wind_power=#{windPower}, relative_humidity=#{relativeHumidity},
        work_content=#{workContent}, work_environment=#{workEnvironment}, safe_tools=#{safeTools}, transport_modes=#{transportModes},
        overhaul_equipment_status=#{overhaulEquipmentStatus}, describe_person_factor=#{describePersonFactor},
        describe_object_factor=#{describeObjectFactor}, describe_environment_factor=#{describeEnvironmentFactor},
        describe_manage_factor=#{describeManageFactor}, describe_may_occur=#{describeMayOccur},
        describe_occupational_hazards=#{describeOccupationalHazards}, risk_level=#{riskLevel}, risk_control_measures=#{riskControlMeasures},
        work_attention_matter=#{workAttentionMatter}, safe_technical_disclosure=#{safeTechnicalDisclosure}, update_by=#{createBy}
        where safe_expect_id=#{safeExpectId} and is_delete=0
    </insert>

    <insert id="modifySafeExpectCollectionUnion">
        INSERT INTO t_safe_expect_collection_union (id, safe_expect_id, task_completion, problem_measure, collection_union_time, create_by)
        select replace(uuid(),"-",""), #{safeExpectId}, #{taskCompletion}, #{problemMeasure}, #{collectionUnionTime}, #{createBy}
        FROM DUAL
        WHERE not exists (SELECT id FROM t_safe_expect_collection_union WHERE safe_expect_id=#{safeExpectId} and is_delete=0);
        update t_safe_expect_collection_union set
        task_completion=#{taskCompletion}, problem_measure=#{problemMeasure},collection_union_time=#{collectionUnionTime}, update_by=#{createBy}
        where safe_expect_id=#{safeExpectId} and is_delete=0
    </insert>

    <update id="deleteSafeExpect">
        update t_safe_expect set
        is_delete=1, update_by=#{createBy}
        where id=#{id} and is_delete=0;
        delete from t_safe_expect_user where safe_expect_id=#{id};
        update t_safe_expect_collection_union set
        is_delete=1, update_by=#{createBy}
        where safe_expect_id=#{id} and is_delete=0;
        update t_safe_expect_info set
        is_delete=1, update_by=#{createBy}
        where safe_expect_id=#{id} and is_delete=0;
    </update>

    <select id="listSafeExpectUser" resultType="com.security.info.manage.dto.res.SafeExpectUserResDTO">
        select s.id, s.user_id, u.real_name as user_name, s.safe_expect_id, s.is_sign, s.sign_time
        from t_safe_expect_user as s left join sys_user_ext as u on u.user_id=s.user_id and u.is_delete=0 and u.status=0
        where s.safe_expect_id=#{id}
        order by s.is_sign desc
    </select>

    <update id="signSafeExpectUser">
        update t_safe_expect_user set
        is_sign=#{isSign}, sign_time=now()
        where id=#{id}
    </update>

    <update id="vxSignSafeExpectUser">
        update t_safe_expect_user set
        is_sign=-1, sign_time=now()
        where safe_expect_id=#{id} and user_id=#{userId}
    </update>
</mapper>