<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.security.info.manage.mapper.PhysicalMapper">
    <select id="listPhysical" resultType="com.security.info.manage.dto.res.PhysicalResDTO">
        select id, no, hospital_no, type, start_time, end_time, remark, create_date, create_by,
        file_word, file_pdf, estimate_num, actual_num from t_physical
        where is_delete=0
        <if test="type!=null">
            and type=#{type}
        </if>
        <if test="sStartTime!=null and sStartTime!=''">
            and start_time>=#{sStartTime}
        </if>
        <if test="sEndTime!=null and sEndTime!=''">
            and #{sEndTime}>=start_time
        </if>
        <if test="eStartTime!=null and eStartTime!=''">
            and end_time>=#{eStartTime}
        </if>
        <if test="eEndTime!=null and eEndTime!=''">
            and #{eEndTime}>=end_time
        </if>
        order by create_date desc
    </select>

    <select id="getPhysicalDetail" resultType="com.security.info.manage.dto.res.PhysicalResDTO">
        select p.id, p.no, p.hospital_no, p.type, p.start_time, p.end_time, p.remark, p.create_date, p.create_by,
        p.file_word, p.file_pdf, p.estimate_num, p.actual_num,
        sum(if(pu.result=1,1,0)) as danger_num, sum(if(pu.result=2,1,0)) as review_num from t_physical as p
        left join t_physical_user as pu on pu.physical_id=p.id and pu.is_delete=0
        where is_delete=0 and id=#{id}
    </select>

    <insert id="addPhysical">
        insert into t_physical(id, no,
        <if test="hospitalNo!=null and hospitalNo!=''">
            hospital_no,
        </if>
        type, start_time, end_time,
        <if test="remark!=null and remark!=''">
            remark,
        </if>
        <if test="fileWord!=null and fileWord!=''">
            file_word,
        </if>
        <if test="filePdf!=null and filePdf!=''">
            file_pdf,
        </if>
        <if test="estimateNum!=null">
            estimate_num,
        </if>
        <if test="actualNum!=null">
            actual_num,
        </if>
        create_by) value (#{id}, #{no},
        <if test="hospitalNo!=null and hospitalNo!=''">
            #{hospitalNo},
        </if>
        #{type}, #{startTime}, #{endTime},
        <if test="remark!=null and remark!=''">
            #{remark},
        </if>
        <if test="fileWord!=null and fileWord!=''">
            #{fileWord},
        </if>
        <if test="filePdf!=null and filePdf!=''">
            #{filePdf},
        </if>
        <if test="estimateNum!=null">
            #{estimateNum},
        </if>
        <if test="actualNum!=null">
            #{actualNum},
        </if>
        #{createBy})
    </insert>

    <update id="modifyPhysical">
        update t_physical set
        <if test="hospitalNo!=null">
            hospital_no=#{hospitalNo},
        </if>
        start_time=#{startTime}, end_time=#{endTime},
        <if test="remark!=null">
            remark=#{remark},
        </if>
        <if test="fileWord!=null">
            file_word=#{fileWord},
        </if>
        <if test="filePdf!=null">
            file_pdf=#{filePdf},
        </if>
        <if test="estimateNum!=null">
            estimate_num=#{estimateNum},
        </if>
        <if test="actualNum!=null">
            actual_num=#{actualNum},
        </if>
        update_by=#{createBy}
        where id=#{id} and no=#{no} and is_delete=0
    </update>

    <update id="modifyPhysicalUser">
        update t_physical_user set is_delete=1, update_by=#{createBy}
        where physical_id=#{id} and physical_no=#{no} and is_delete=0;
        insert into t_physical_user(id, physical_id, physical_no,
        <if test="type==1">
            user_id,
        </if>
        <if test="type==2">
            new_user_id,
        </if>
        user_name, mobile, create_by)
        values
        <foreach collection="users" index="index" item="user" separator=",">
            (replace(uuid(),"-",""), #{id}, #{no},
            <if test="type==1">
                #{user.id},
            </if>
            <if test="type==2">
                #{user.id},
            </if>
            #{user.name}, #{mobile} #{createBy})
        </foreach>
        ;
    </update>

    <update id="deletePhysical">
        update t_physical set
        is_delete=1, update_by=#{createBy}
        where id=#{id} and no=#{no} and is_delete=0;
        update t_physical_user set is_delete=1, update_by=#{createBy}
        where physical_id=#{id} and physical_no=#{no} and is_delete=0;
    </update>

    <insert id="addNewUser">
        <foreach collection="list" index="index" item="newUser" separator=";">
            insert into t_new_user(id,
            <if test="newUser.name!=null and newUser.name!=''">
                name,
            </if>
            <if test="newUser.age!=null">
                age,
            </if>
            <if test="newUser.sex!=null">
                sex,
            </if>
            <if test="newUser.phone!=null and newUser.phone!=''">
                phone,
            </if>
            create_by) value (#{newUser.id},
            <if test="newUser.name!=null and newUser.name!=''">
                #{newUser.name},
            </if>
            <if test="newUser.age!=null">
                #{newUser.age},
            </if>
            <if test="newUser.sex!=null">
                #{newUser.sex},
            </if>
            <if test="newUser.phone!=null and newUser.phone!=''">
                #{newUser.phone},
            </if>
            #{newUser.createBy})
        </foreach>
    </insert>

    <select id="listPhysicalUser" resultType="com.security.info.manage.dto.res.PhysicalUserResDTO">
        select pu.id, pu.physical_id, pu.physical_no, pu.user_id, pu.new_user_id, pu.user_name, pu.is_review,
        pu.last_physical_user_id, pu.status, pu.result, pu.mobile,
        pu.physical_time, pu.create_date, pu.file_word, pu.file_pdf from t_physical_user as pu
        where pu.physical_id=#{id} and pu.is_delete=0
        order by pu.create_date desc
    </select>

    <select id="selectPhysicalUserById" resultType="com.security.info.manage.dto.res.PhysicalUserResDTO">
        select pu.id, pu.physical_id, pu.physical_no, pu.user_id, pu.new_user_id, pu.user_name, pu.is_review,
        pu.last_physical_user_id, pu.status, pu.result, pu.mobile,
        pu.physical_time, pu.create_date, pu.file_word, pu.file_pdf from t_physical_user as pu
        where pu.id=#{id} and pu.is_delete=0
    </select>

    <select id="getPhysicalResult" resultType="com.security.info.manage.entity.PhysicalResult">
        select id, physical_user_id, name, age, sex, phone, work_year, work_type, hazard_factor_name, warning_index, conclusion,
        handling_opinions, medical_advice, create_date, update_date, create_by, update_by, is_delete from t_physical_result
        where physical_user_id=#{id} and is_delete=0
    </select>

    <insert id="userReview">
        insert into t_physical_user(id, physical_id, physical_no, user_id, new_user_id, is_review, last_physical_user_id, create_by)
        values (replace(uuid(),"-",""), #{physicalId}, #{physicalNo}, #{userId}, #{newUserId}, 1, #{id}, #{createBy});
        update t_physical_user set
        is_review=1, update_by=#{createBy}, status=5
        where id=#{id} and is_delete=0;
    </insert>

    <update id="editPhysical">
        update t_physical_user set
        hospital_no=#{hospitalNo}, estimate_num=#{estimateNum}, actual_num=#{actualNum}, update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <update id="physicalResultImport">
        <foreach collection="users" index="index" item="user" separator="">
            update t_physical_user set
            status=3, result=#{user.result}, update_by=#{userId}, physical_time=#{physicalTime}
            where user_name=#{user.name} and physical_id=#{id} and is_delete=0 and mobile=#{user.phone};
            insert into t_physical_result(id, physical_user_id, name, age, sex, phone, work_year, work_type,
            hazard_factor_name, warning_index, conclusion, handling_opinions, medical_advice, create_by)
            value (#{user.id}, (select id from t_physical_user where user_name=#{user.name} and mobile=#{user.phone} and physical_id=#{id} and is_delete=0),
            #{user.name}, #{user.age}, #{user.sex}, #{user.phone}, #{user.workYear}, #{user.workType}, #{user.hazardFactorName},
            #{user.warningIndex}, #{user.conclusion}, #{user.handlingOpinions}, #{user.medicalAdvice}, #{userId});
        </foreach>
    </update>

    <update id="uploadFilePhysical">
        update t_physical set
        <if test="type==1">
            file_word=#{url},
        </if>
        <if test="type==2">
            file_pdf=#{url},
        </if>
        update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <update id="uploadFilePhysicalUser">
        update t_physical_user set
        <if test="type==1">
            file_word=#{url},
        </if>
        <if test="type==2">
            file_pdf=#{url},
        </if>
        update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

</mapper>