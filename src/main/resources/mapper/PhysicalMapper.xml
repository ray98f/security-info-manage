<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.security.info.manage.mapper.PhysicalMapper">
    <select id="listPhysical" resultType="com.security.info.manage.dto.res.PhysicalResDTO">
        select p.id, p.no, p.hospital_no, p.type, p.start_time, p.end_time, p.remark, p.create_date, p.create_by,
        f1.file_url as file_word, f2.file_url as file_pdf, p.estimate_num, p.actual_num from t_physical as p
        left join sys_file as f1 on f1.id=p.file_word and f1.is_delete=0
        left join sys_file as f2 on f2.id=p.file_pdf and f2.is_delete=0
        where p.is_delete=0
        <if test="type!=null">
            and p.type=#{type}
        </if>
        <if test="sStartTime!=null and sStartTime!=''">
            and p.start_time>=#{sStartTime}
        </if>
        <if test="sEndTime!=null and sEndTime!=''">
            and #{sEndTime}>=p.start_time
        </if>
        <if test="eStartTime!=null and eStartTime!=''">
            and p.end_time>=#{eStartTime}
        </if>
        <if test="eEndTime!=null and eEndTime!=''">
            and #{eEndTime}>=p.end_time
        </if>
        <if test="type==null">
            and p.file_word is not null and p.estimate_num is not null and p.actual_num is not null
        </if>
        order by p.create_date desc
    </select>

    <select id="countPhysicalUser" resultType="com.security.info.manage.dto.res.PhysicalUserCountResDTO">
        select
        sum(case when result=1 then 1 else 0 end ) as taboo_num,
        sum(case when result=2 then 1 else 0 end ) as review_num,
        sum(case when result=3 then 1 else 0 end ) as normal_num
        from t_physical_user
        where physical_id=#{id} and is_delete=0
        group by physical_id
    </select>

    <select id="getPhysicalDetail" resultType="com.security.info.manage.dto.res.PhysicalResDTO">
        select p.id, p.no, p.hospital_no, p.type, p.start_time, p.end_time, p.remark, p.create_date, p.create_by,
        f1.file_url as file_word, f2.file_url as file_pdf, p.estimate_num, p.actual_num,
        sum(case when pu.result=1 then 1 else 0 end) as danger_num, sum(case when pu.result=2 then 1 else 0 end) as review_num
        from t_physical as p
        left join t_physical_user as pu on pu.physical_id=p.id and pu.is_delete=0
        left join sys_file as f1 on f1.id=p.file_word and f1.is_delete=0
        left join sys_file as f2 on f2.id=p.file_pdf and f2.is_delete=0
        where p.is_delete=0 and p.id=#{id}
    </select>

    <insert id="addPhysical">
        insert into t_physical(id, no,
        <if test="hospitalNo!=null and hospitalNo!=''">
            hospital_no,
        </if>
        type, start_time, end_time,
        <if test="remark!=null and remark!=''">
            remark,
        </if>
        <if test="fileWord!=null and fileWord!=''">
            file_word,
        </if>
        <if test="filePdf!=null and filePdf!=''">
            file_pdf,
        </if>
        <if test="estimateNum!=null">
            estimate_num,
        </if>
        <if test="actualNum!=null">
            actual_num,
        </if>
        create_by) value (#{id}, #{no},
        <if test="hospitalNo!=null and hospitalNo!=''">
            #{hospitalNo},
        </if>
        #{type}, #{startTime}, #{endTime},
        <if test="remark!=null and remark!=''">
            #{remark},
        </if>
        <if test="fileWord!=null and fileWord!=''">
            #{fileWord},
        </if>
        <if test="filePdf!=null and filePdf!=''">
            #{filePdf},
        </if>
        <if test="estimateNum!=null">
            #{estimateNum},
        </if>
        <if test="actualNum!=null">
            #{actualNum},
        </if>
        #{createBy})
    </insert>

    <update id="modifyPhysical">
        update t_physical set
        <if test="hospitalNo!=null">
            hospital_no=#{hospitalNo},
        </if>
        start_time=#{startTime}, end_time=#{endTime},
        <if test="remark!=null">
            remark=#{remark},
        </if>
        <if test="fileWord!=null">
            file_word=#{fileWord},
        </if>
        <if test="filePdf!=null">
            file_pdf=#{filePdf},
        </if>
        <if test="estimateNum!=null">
            estimate_num=#{estimateNum},
        </if>
        <if test="actualNum!=null">
            actual_num=#{actualNum},
        </if>
        update_by=#{createBy}
        where id=#{id} and no=#{no} and is_delete=0
    </update>

    <update id="modifyPhysicalUser">
        update t_physical_user set is_delete=1, update_by=#{createBy}
        where physical_id=#{id} and physical_no=#{no} and is_delete=0;
        insert into t_physical_user(id, physical_id, physical_no,
        <if test="type==1">
            user_id,
        </if>
        <if test="type==2">
            new_user_id,
        </if>
        user_name, mobile, create_by)
        values
        <foreach collection="users" index="index" item="user" separator=",">
            (replace(uuid(),"-",""), #{id}, #{no},
            <if test="type==1">
                #{user.id},
            </if>
            <if test="type==2">
                #{user.id},
            </if>
            #{user.name}, #{user.mobile}, #{createBy})
        </foreach>
        ;
    </update>

    <update id="deletePhysical">
        update t_physical set
        is_delete=1, update_by=#{createBy}
        where id=#{id} and no=#{no} and is_delete=0;
        update t_physical_user set is_delete=1, update_by=#{createBy}
        where physical_id=#{id} and physical_no=#{no} and is_delete=0;
    </update>

    <insert id="addNewUser">
        <foreach collection="list" index="index" item="newUser" separator=";">
            insert into t_new_user(id,
            <if test="newUser.name!=null and newUser.name!=''">
                name,
            </if>
            <if test="newUser.age!=null">
                age,
            </if>
            <if test="newUser.sex!=null">
                sex,
            </if>
            <if test="newUser.phone!=null and newUser.phone!=''">
                phone,
            </if>
            create_by) value (#{newUser.id},
            <if test="newUser.name!=null and newUser.name!=''">
                #{newUser.name},
            </if>
            <if test="newUser.age!=null">
                #{newUser.age},
            </if>
            <if test="newUser.sex!=null">
                #{newUser.sex},
            </if>
            <if test="newUser.phone!=null and newUser.phone!=''">
                #{newUser.phone},
            </if>
            #{newUser.createBy})
        </foreach>
    </insert>

    <select id="listPhysicalUser" resultType="com.security.info.manage.dto.res.PhysicalUserResDTO">
        select pu.id, pu.physical_id, pu.physical_no, pu.user_id, pu.new_user_id, pu.user_name, pu.is_review,
        pu.last_physical_user_id, pu.status, pu.result, pu.mobile, ue.user_no,
        pu.physical_time, pu.create_date, f1.file_url as file_word, f2.file_url as file_pdf from t_physical_user as pu
        left join sys_user_ext as ue on ue.user_id=pu.user_id and ue.is_delete=0 and ue.status=0
        left join sys_file as f1 on f1.id=pu.file_word and f1.is_delete=0
        left join sys_file as f2 on f2.id=pu.file_pdf and f2.is_delete=0
        where pu.physical_id=#{id} and pu.is_delete=0
        order by pu.create_date desc
    </select>

    <select id="selectPhysicalUserById" resultType="com.security.info.manage.dto.res.PhysicalUserResDTO">
        select pu.id, pu.physical_id, pu.physical_no, pu.user_id, pu.new_user_id, pu.user_name, pu.is_review,
        pu.last_physical_user_id, pu.status, pu.result, pu.mobile, ue.user_no,
        pu.physical_time, pu.create_date, f1.file_url as file_word, f2.file_url as file_pdf from t_physical_user as pu
        left join sys_user_ext as ue on ue.user_id=pu.user_id and ue.is_delete=0 and ue.status=0
        left join sys_file as f1 on f1.id=pu.file_word and f1.is_delete=0
        left join sys_file as f2 on f2.id=pu.file_pdf and f2.is_delete=0
        where pu.id=#{id} and pu.is_delete=0
    </select>

    <select id="selectLatestPhysicalUserByUserId" resultType="com.security.info.manage.dto.res.PhysicalUserResDTO">
        select pu.id, pu.physical_id, pu.physical_no, p.hospital_no, pu.user_id, pu.new_user_id, pu.user_name, pu.is_review,
        pu.last_physical_user_id, pu.status, pu.result, pu.mobile, ue.user_no,
        pu.physical_time, pu.create_date, f1.file_url as file_word, f2.file_url as file_pdf from t_physical_user as pu
        left join sys_user_ext as ue on ue.user_id=pu.user_id and ue.is_delete=0 and ue.status=0
        left join t_physical as p on p.id=pu.physical_id and p.is_delete=0
        left join sys_file as f1 on f1.id=pu.file_word and f1.is_delete=0
        left join sys_file as f2 on f2.id=pu.file_pdf and f2.is_delete=0
        where pu.user_id=#{id} and pu.is_delete=0 and pu.status>=3
        order by pu.physical_time desc
        limit 1
    </select>

    <select id="selectPhysicalUserByUserId" resultType="com.security.info.manage.dto.res.PhysicalUserResDTO">
        select pu.id, pu.physical_id, pu.physical_no, p.hospital_no, pu.user_id, pu.new_user_id, pu.user_name, pu.is_review,
        pu.last_physical_user_id, pu.status, pu.result, pu.mobile, ue.user_no,
        pu.physical_time, pu.create_date, f1.file_url as file_word, f2.file_url as file_pdf from t_physical_user as pu
        left join sys_user_ext as ue on ue.user_id=pu.user_id and ue.is_delete=0 and ue.status=0
        left join t_physical as p on p.id=pu.physical_id and p.is_delete=0
        left join sys_file as f1 on f1.id=pu.file_word and f1.is_delete=0
        left join sys_file as f2 on f2.id=pu.file_pdf and f2.is_delete=0
        where pu.user_id=#{id} and pu.is_delete=0 and pu.status>=3
        order by pu.physical_time desc
    </select>

    <select id="selectPhysicalUserByPhysicalId" resultType="com.security.info.manage.dto.res.PhysicalUserResDTO">
        select pu.id, pu.physical_id, pu.physical_no, pu.user_id, pu.new_user_id, pu.user_name, pu.is_review,
        pu.last_physical_user_id, pu.status, pu.result, pu.mobile, ue.user_no,
        pu.physical_time, pu.create_date, f1.file_url as file_word, f2.file_url as file_pdf from t_physical_user as pu
        left join t_physical as p on p.id=pu.physical_id and p.is_delete=0
        left join sys_user_ext as ue on ue.user_id=pu.user_id and ue.is_delete=0 and ue.status=0
        left join sys_file as f1 on f1.id=pu.file_word and f1.is_delete=0
        left join sys_file as f2 on f2.id=pu.file_pdf and f2.is_delete=0
        where p.id=#{id} and pu.is_delete=0 and pu.result=2
    </select>

    <select id="getPhysicalResult" resultType="com.security.info.manage.entity.PhysicalResult">
        select id, physical_user_id, name, age, sex, phone, work_year, work_type, hazard_factor_name, warning_index, conclusion,
        handling_opinions, medical_advice, create_date, update_date, create_by, update_by, is_delete from t_physical_result
        where physical_user_id=#{id} and is_delete=0
    </select>

    <insert id="userReview">
        insert into t_physical_user(id, physical_id, physical_no, user_name, mobile, user_id, new_user_id,
        is_review, last_physical_user_id, create_by)
        select replace(uuid(),"-",""), #{physicalId}, #{physicalNo}, #{userName}, #{mobile}, #{userId}, #{newUserId}, 1, #{id}, #{createBy}
        FROM DUAL
        WHERE not exists (SELECT id FROM t_physical_user WHERE last_physical_user_id=#{id} and is_review=1 and is_delete=0);
        update t_physical_user set
        is_review=1, update_by=#{createBy}, status=5
        where id=#{id} and is_delete=0;
    </insert>

    <update id="editPhysical">
        update t_physical set
        <if test="hospitalNo!=null and hospitalNo!=''">
            hospital_no=#{hospitalNo},
        </if>
        estimate_num=#{estimateNum}, actual_num=#{actualNum}, update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <update id="physicalResultImport">
        <foreach collection="users" index="index" item="user" separator="">
            update t_physical_user set
            status=3, result=#{user.result}, update_by=#{userId}, physical_time=#{physicalTime}
            where user_name=#{user.name}
            <if test="user.phone!=null">
                and mobile=#{user.phone}
            </if>
            and physical_id=#{id} and is_delete=0;
            insert into t_physical_result(id, physical_user_id, name, age, sex,
            <if test="user.phone!=null">
                phone,
            </if>
            work_year, work_type,
            hazard_factor_name, warning_index, conclusion, handling_opinions, medical_advice, create_by)
            value (#{user.id}, (select id from t_physical_user where user_name=#{user.name}
            <if test="user.phone!=null">
                and mobile=#{user.phone}
            </if>
            and physical_id=#{id} and is_delete=0),
            #{user.name}, #{user.age}, #{user.sex},
            <if test="user.phone!=null">
                #{user.phone},
            </if>
            #{user.workYear}, #{user.workType}, #{user.hazardFactorName},
            #{user.warningIndex}, #{user.conclusion}, #{user.handlingOpinions}, #{user.medicalAdvice}, #{userId});
        </foreach>
    </update>

    <update id="uploadFilePhysical">
        update t_physical set
        <if test="type==1">
            file_word=#{url},
        </if>
        <if test="type==2">
            file_pdf=#{url},
        </if>
        update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <update id="uploadFilePhysicalUser">
        update t_physical_user set
        <if test="type==1">
            file_word=#{url},
        </if>
        <if test="type==2">
            file_pdf=#{url},
        </if>
        update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <insert id="insertPhysicalNotice">
        <if test="type==1 and users.size()>0">
            insert into t_physical_notice(id, user_id, physical_id, physical_user_id) values
            <foreach collection="users" index="index" item="user" separator=",">
                (replace(uuid(),"-",""), #{user.userId}, #{physicalId}, #{user.physicalUserId})
            </foreach>
        </if>
        <if test="type==2 and users.size()>0">
            insert into t_physical_notice(id, physical_id, physical_user_id, new_user_id) values
            <foreach collection="users" index="index" item="user" separator=",">
                (replace(uuid(),"-",""), #{physicalId}, #{user.physicalUserId}, #{user.userId})
            </foreach>
        </if>
    </insert>

    <select id="listFeedback" resultType="com.security.info.manage.dto.res.PhysicalFeedbackResDTO">
        select pf.id, pf.physical_id, pf.physical_user_id, p.no as physical_no, p.type, pu.physical_time,
        pf.feedback_info, pf.apply_opinions, pf.apply_time, pf.status, ue.user_no, u.name as user_name
        from t_physical_feedback as pf
        left join t_physical as p on pf.physical_id=p.id and p.is_delete=0
        left join t_physical_user as pu on pu.id=pf.physical_user_id and pu.is_delete=0
        left join sys_user as u on u.id=pu.user_id and u.is_delete=0
        left join sys_user_ext as ue on u.id=ue.user_id and ue.is_delete=0 and ue.status=0
        where pf.is_delete=0
        <if test="name!=null and name!=''">
            and u.name like CONCAT('%',#{name},'%')
        </if>
        order by pf.create_date desc
    </select>

    <insert id="insertPhysicalFeedback">
        insert into t_physical_feedback(id, physical_id, physical_user_id, feedback_info, create_by)
        value (#{id}, #{physicalId}, #{physicalUserId}, #{feedbackInfo}, #{createBy});
        update t_physical_user set status=1 where id=#{physicalUserId};
    </insert>

    <update id="modifyPhysicalFeedback">
        update t_physical_feedback set
        <if test="applyOpinions!=null and applyOpinions!=''">
            apply_opinions=#{applyOpinions},
        </if>
        <if test="applyTime!=null and applyTime!=''">
            apply_time=now(),
        </if>
        <if test="status!=null">
            status=#{status}, audit_id=#{updateBy},
        </if>
        update_by=#{updateBy}
        where id=#{id} and is_delete=0;
        update t_physical_user set status=2 where id=(select physical_user_id from t_physical_feedback where id=#{id} and is_delete=0);
    </update>

    <select id="listExpiredPhysicalUser" resultType="com.security.info.manage.dto.res.PhysicalUserResDTO">
        select pu.id, pu.physical_id, pu.user_name from t_physical_user as pu
        left join t_physical as p on pu.physical_id=p.id and p.is_delete=0
        where now()>p.end_time and 3>pu.status and pu.is_delete=0
    </select>

    <insert id="addPhysicalWarning">
        insert into t_physical_warning(id, type, physical_id, physical_user_id, warning_time, info)
        values
        <foreach collection="list" index="index" item="warn" separator=",">
            (replace(uuid(),"-",""), 1, #{warn.physicalId}, #{warn.id}, now(), #{warn.userName})
        </foreach>
    </insert>

    <select id="listPhysicalWarn" resultType="com.security.info.manage.dto.res.PhysicalWarnResDTO">
        SELECT pw.id, pw.type, pw.info, pw.physical_id, pw.physical_user_id, pw.warning_time, pw.status, pu.user_name,
        ifnull(pu.user_id, pu.new_user_id) as user_id, p.type as physical_type, ue.user_no, sp.post_name,
        TIMESTAMPDIFF(DAY, p.end_time, now()) as day
        FROM t_physical_warning as pw
        left join t_physical as p on p.id=pw.physical_id and p.is_delete=0
        left join t_physical_user as pu on pu.id=pw.physical_user_id and pu.is_delete=0
        left join sys_user as u on u.id=pu.user_id and u.is_delete=0
        left join sys_user_ext as ue on ue.user_id=pu.user_id and ue.is_delete=0 and ue.status=0
        left join sys_dept as d on d.id=u.main_dept and d.is_delete=0
        left join sys_user_post as up on up.user_id=pu.user_id
        left join sys_post as sp on sp.id=up.post_id and sp.is_delete=0 and sp.status=0
        where pw.is_delete=0
        order by pw.create_date desc
    </select>

    <update id="handlePhysicalWarn">
        update t_physical_warning set status=1 where id=#{id} and is_delete=0
    </update>
</mapper>