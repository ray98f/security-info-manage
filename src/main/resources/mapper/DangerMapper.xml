<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.security.info.manage.mapper.DangerMapper">

    <select id="listDept" resultType="com.security.info.manage.dto.res.DeptTreeResDTO">
        select distinct ep.dept_id as id,
        CASE ep.dept_id WHEN 0
        THEN "公共板块"
        ELSE d.org_name
        END as org_name from sys_entry_plate as ep
        left join sys_dept as d on d.id=ep.dept_id and d.is_delete=0
        where ep.type=#{type}
        order by d.sort asc
    </select>

    <select id="listPlate" resultType="com.security.info.manage.entity.EntryPlate">
        select ep.id, ep.type, ep.dept_id, d.org_name as dept_name, ep.plate_name, ep.proportion
        from sys_entry_plate as ep left join
        (select id, org_name from sys_dept where is_delete=0 union all select "0" as id, "公共板块" as org_name) as d
        on ep.dept_id=d.id
        <if test="type!=null or (deptId!=null and deptId!='') or (deptName!=null and deptName!='')">
            <trim prefix="where" suffixOverrides="and">
                <if test="type!=null">
                    ep.type=#{type} and
                </if>
                <if test="deptId!=null and deptId!=''">
                    ep.dept_id=#{deptId} and
                </if>
                <if test="deptName!=null and deptName!=''">
                    d.org_name like concat('%', #{deptName},'%') and
                </if>
            </trim>
        </if>
        order by d.id asc
    </select>

    <select id="selectPlateIsExist" resultType="java.lang.Integer">
        select count(1) from sys_entry_plate
        where plate_name=#{plateName} and type=#{type}
        <if test="id!=null and id!=''">
            and id!=#{id}
        </if>
        limit 1
    </select>

    <insert id="addPlate">
        insert into sys_entry_plate(id, type, dept_id, plate_name, proportion)
        value (#{id}, #{type}, #{deptId}, #{plateName}, #{proportion})
    </insert>

    <update id="modifyPlate">
        update sys_entry_plate set
        <trim suffixOverrides=",">
            <if test="type!=null">
                type=#{type},
            </if>
            <if test="deptId!=null">
                dept_id=#{deptId},
            </if>
            <if test="plateName!=null">
                plate_name=#{plateName},
            </if>
            <if test="proportion!=null">
                proportion=#{proportion},
            </if>
        </trim>
        where id=#{id}
    </update>

    <delete id="deletePlate">
        delete from sys_entry_plate where id=#{id}
    </delete>

    <select id="listEntry" resultType="com.security.info.manage.entity.EntryPlate$Entry">
        select id, plate_id, content
        from sys_entry
        where plate_id=#{plateId}
    </select>

    <insert id="addEntry">
        insert into sys_entry(id, plate_id, content)
        value (#{id}, #{plateId}, #{content})
    </insert>

    <update id="modifyEntry">
        update sys_entry set
        <trim suffixOverrides=",">
            <if test="plateId!=null">
                plate_id=#{plateId},
            </if>
            <if test="content!=null">
                content=#{content},
            </if>
        </trim>
        where id=#{id}
    </update>

    <delete id="deleteEntry">
        delete from sys_entry where id=#{id}
    </delete>

    <select id="selectUserStatus" resultType="java.lang.Integer">
        select count(1) from t_danger_examine
        where danger_id=#{dangerId} and status=0
        <if test="userId!=null and userId!='' and userId!='admin'">
            and examine_user_id=#{userId}
        </if>
        and is_delete=0
        limit 1
    </select>

    <select id="selectExamineUserStatus" resultType="java.lang.Integer">
        select count(1) from t_danger_rectify
        where danger_id=#{dangerId} and is_delete=0
        <if test="userId!=null and userId!='' and type==1">
            and rectify_user_id=#{userId}
        </if>
        <if test="userId!=null and userId!='' and type==2">
            and examine_user_id=#{userId}
        </if>
        limit 1
    </select>

    <select id="selectCheckUserStatus" resultType="java.lang.Integer">
        select count(1) from t_danger_rectify as dr
        left join t_danger as d on d.id=dr.danger_id
        where dr.danger_id=#{dangerId} and dr.is_delete=0 and d.check_user_id=#{userId} and dr.check_user_status=1
        limit 1
    </select>

    <select id="listDangerExamine" resultType="com.security.info.manage.dto.res.DangerExamineResDTO">
        select de.id, de.danger_id, de.user_type, de.examine_user_id, de.examine_time, de.opinion, de.status,
        ue.real_name as examine_user_name from t_danger_examine as de
        left join sys_user_ext as ue on ue.user_id=de.examine_user_id and ue.status=0 and ue.is_delete=0
        where de.danger_id=#{dangerId} and de.is_delete=0
        order by user_type asc
    </select>

    <select id="getDangerRectify" resultType="com.security.info.manage.dto.res.DangerRectifyResDTO">
        select dr.id, dr.danger_id, dr.rectify_user_id, dr.rectify_time, dr.rectify_measure, dr.after_pic, dr.examine_user_id,
        dr.examine_time, dr.status, dr.is_eliminate, group_concat(ue1.real_name) as rectify_user_name,
        group_concat(ue2.real_name) as examine_user_name
        from t_danger_rectify as dr
        left join sys_user_ext as ue1 on ue1.user_id=dr.rectify_user_id and ue1.status=0 and ue1.is_delete=0
        left join sys_user_ext as ue2 on ue2.user_id=dr.examine_user_id and ue2.status=0 and ue2.is_delete=0
        where dr.danger_id=#{id} and dr.is_delete=0
        group by dr.danger_id
    </select>

    <select id="listDanger" resultType="com.security.info.manage.dto.res.DangerResDTO">
        select distinct d.id, d.no, d.region_id, r.name as region_name, d.address, d.content, d.before_pic, d.rectify_term, d.is_use, d.responsibility_dept_id,
        d.check_dept_id, d1.org_name as check_dept_name, d.check_user_id, ue.real_name as check_user_name, d.check_time, d.create_date,
        d.is_build_prob, d.build_entry_id, e1.content as build_content, ep1.dept_id as build_dept_id, ep1.id as build_plate_id, ep1.plate_name as build_plate_name,
        d2.org_name as build_dept_name, ep1.proportion as build_proportion, d.build_score, d.build_conversion_score, d.is_prod_prob,
        d.prod_entry_id, d.prod_entry_score, d.is_danger_prob, d.level, d.danger_category, d.is_push, d.status, ep2.dept_id as prod_dept_id,
        ep2.id as prod_plate_id, ep2.plate_name as prod_plate_name, d3.org_name as prod_dept_name, d.prod_category, e2.content as prod_content
        from t_danger as d
        left join sys_user_ext as ue on d.check_user_id=ue.user_id and ue.status=0 and ue.is_delete=0
        left join sys_dept as d1 on d1.id=d.check_dept_id and d1.is_delete=0
        left join t_region as r on r.id=d.region_id and r.is_delete=0 and r.status=0
        <if test="userId!=null and userId!=''">
            left join t_danger_examine as de on de.danger_id=d.id and de.is_delete=0
        </if>
        left join sys_entry as e1 on e1.id=d.build_entry_id
        left join sys_entry_plate as ep1 on ep1.id=e1.plate_id
        left join sys_dept as d2 on d2.id=ep1.dept_id and d2.is_delete=0
        left join sys_entry as e2 on e2.id=d.prod_entry_id
        left join sys_entry_plate as ep2 on ep2.id=e2.plate_id
        left join sys_dept as d3 on d3.id=ep2.dept_id and d3.is_delete=0
        where d.is_delete=0
        <if test="type==1">
            and d.is_build_prob=1
        </if>
        <if test="type==2">
            and d.is_prod_prob=1
        </if>
        <if test="type==3">
            and d.is_danger_prob=1
        </if>
        <if test="userId!=null and userId!=''">
            and de.examine_user_id=#{userId}
        </if>
        group by d.id
        order by d.create_date desc
    </select>

    <select id="vxListDanger" resultType="com.security.info.manage.dto.res.DangerResDTO">
        select distinct d.id, d.no, d.region_id, r.name as region_name, d.address, d.content, d.before_pic, d.rectify_term, d.is_use, d.responsibility_dept_id,
        d.check_dept_id, d1.org_name as check_dept_name, d.check_user_id, ue.real_name as check_user_name, d.check_time, d.create_date,
        d.is_build_prob, d.build_entry_id, e1.content as build_content, ep1.dept_id as build_dept_id, ep1.id as build_plate_id, ep1.plate_name as build_plate_name,
        d2.org_name as build_dept_name, ep1.proportion as build_proportion, d.build_score, d.build_conversion_score, d.is_prod_prob,
        d.prod_entry_id, d.prod_entry_score, d.is_danger_prob, d.level, d.danger_category, d.is_push, d.status, ep2.dept_id as prod_dept_id,
        ep2.id as prod_plate_id, ep2.plate_name as prod_plate_name, d3.org_name as prod_dept_name, d.prod_category, e2.content as prod_content
        from t_danger as d
        left join sys_user_ext as ue on d.check_user_id=ue.user_id and ue.status=0 and ue.is_delete=0
        left join sys_dept as d1 on d1.id=d.check_dept_id and d1.is_delete=0
        left join t_region as r on r.id=d.region_id and r.is_delete=0 and r.status=0
        <if test="type==2 and userId!=null and userId!=''">
            left join t_danger_rectify as dr on dr.danger_id=d.id and dr.is_delete=0
        </if>
        <if test="type==3 and userId!=null and userId!=''">
            left join t_danger_rectify as dr on dr.danger_id=d.id and dr.is_delete=0
            left join t_danger_examine as de on de.danger_id=d.id and de.is_delete=0
        </if>
        left join sys_entry as e1 on e1.id=d.build_entry_id
        left join sys_entry_plate as ep1 on ep1.id=e1.plate_id
        left join sys_dept as d2 on d2.id=ep1.dept_id and d2.is_delete=0
        left join sys_entry as e2 on e2.id=d.prod_entry_id
        left join sys_entry_plate as ep2 on ep2.id=e2.plate_id
        left join sys_dept as d3 on d3.id=ep2.dept_id and d3.is_delete=0
        where d.is_delete=0
        <if test="type==1 and userId!=null and userId!=''">
            and d.create_by=#{userId}
        </if>
        <if test="type==2 and userId!=null and userId!=''">
            and dr.rectify_user_id=#{userId}
        </if>
        <if test="type==3 and userId!=null and userId!=''">
            and de.examine_user_id=#{userId} or dr.examine_user_id=#{userId} or (d.check_user_id=#{userId} and dr.check_user_status=1)
        </if>
        group by d.id
        order by d.create_date desc
    </select>

    <select id="vxNearbyDanger" resultType="com.security.info.manage.dto.res.DangerResDTO">
        select d.id, d.no, d.region_id, r.name as region_name, d.address, d.content, d.before_pic, d.rectify_term, d.is_use, d.responsibility_dept_id,
        d.check_dept_id, d1.org_name as check_dept_name, d.check_user_id, ue.real_name as check_user_name, d.check_time, d.create_date,
        d.is_build_prob, d.build_entry_id, e1.content as build_content, ep1.dept_id as build_dept_id, ep1.id as build_plate_id, ep1.plate_name as build_plate_name,
        d2.org_name as build_dept_name, ep1.proportion as build_proportion, d.build_score, d.build_conversion_score, d.is_prod_prob,
        d.prod_entry_id, d.prod_entry_score, d.is_danger_prob, d.level, d.danger_category, d.is_push, d.status, ep2.dept_id as prod_dept_id,
        ep2.id as prod_plate_id, ep2.plate_name as prod_plate_name, d3.org_name as prod_dept_name, d.prod_category, e2.content as prod_content
        from t_danger as d
        left join sys_user_ext as ue on d.check_user_id=ue.user_id and ue.status=0 and ue.is_delete=0
        left join sys_dept as d1 on d1.id=d.check_dept_id and d1.is_delete=0
        left join t_region as r on r.id=d.region_id and r.is_delete=0 and r.status=0
        left join sys_entry as e1 on e1.id=d.build_entry_id
        left join sys_entry_plate as ep1 on ep1.id=e1.plate_id
        left join sys_dept as d2 on d2.id=ep1.dept_id and d2.is_delete=0
        left join sys_entry as e2 on e2.id=d.prod_entry_id
        left join sys_entry_plate as ep2 on ep2.id=e2.plate_id
        left join sys_dept as d3 on d3.id=ep2.dept_id and d3.is_delete=0
        where d.is_delete=0 and r.lng>#{minLng} and #{maxLng}>r.lng and r.lat>#{minLat} and #{maxLat}>r.lat
        and d.status in (2,3,4)
        order by d.create_date desc
    </select>

    <select id="getDangerDetail" resultType="com.security.info.manage.dto.res.DangerResDTO">
        select d.id, d.no, d.region_id, r.name as region_name, d.address, d.content, d.before_pic, d.rectify_term, d.is_use, d.responsibility_dept_id,
        d.check_dept_id, d1.org_name as check_dept_name, d.check_user_id, ue.real_name as check_user_name, d.check_time, d.create_date,
        d.is_build_prob, d.build_entry_id, e1.content as build_content, ep1.dept_id as build_dept_id, ep1.id as build_plate_id, ep1.plate_name as build_plate_name,
        d2.org_name as build_dept_name, ep1.proportion as build_proportion, d.build_score, d.build_conversion_score, d.is_prod_prob,
        d.prod_entry_id, d.prod_entry_score, d.is_danger_prob, d.level, d.danger_category, d.is_push, d.status, ep2.dept_id as prod_dept_id,
        ep2.id as prod_plate_id, ep2.plate_name as prod_plate_name, d3.org_name as prod_dept_name, d.prod_category, e2.content as prod_content
        from t_danger as d
        left join sys_user_ext as ue on d.check_user_id=ue.user_id and ue.status=0 and ue.is_delete=0
        left join sys_dept as d1 on d1.id=d.check_dept_id and d1.is_delete=0
        left join t_region as r on r.id=d.region_id and r.is_delete=0 and r.status=0
        left join sys_entry as e1 on e1.id=d.build_entry_id
        left join sys_entry_plate as ep1 on ep1.id=e1.plate_id
        left join sys_dept as d2 on d2.id=ep1.dept_id and d2.is_delete=0
        left join sys_entry as e2 on e2.id=d.prod_entry_id
        left join sys_entry_plate as ep2 on ep2.id=e2.plate_id
        left join sys_dept as d3 on d3.id=ep2.dept_id and d3.is_delete=0
        where d.is_delete=0 and d.id=#{id}
        order by d.create_date desc
    </select>

    <update id="modifyDanger">
        update t_danger set
        <if test="regionId!=null">
            region_id=#{regionId},
        </if>
        <if test="address!=null">
            address=#{address},
        </if>
        <if test="content!=null">
            content=#{content},
        </if>
        <if test="beforePic!=null">
            before_pic=#{beforePic},
        </if>
        <if test="rectifyTerm!=null">
            rectify_term=#{rectifyTerm},
        </if>
        <if test="checkDeptId!=null">
            check_dept_id=#{checkDeptId},
        </if>
        <if test="checkUserId!=null">
            check_user_id=#{checkUserId},
        </if>
        <if test="checkTime!=null">
            check_time=#{checkTime},
        </if>
        <if test="isBuildProb!=null">
            is_build_prob=#{isBuildProb},
        </if>
        <if test="buildEntryId!=null">
            build_entry_id=#{buildEntryId},
        </if>
        <if test="buildScore!=null">
            build_score=#{buildScore},
        </if>
        <if test="buildConversionScore!=null">
            build_conversion_score=#{buildConversionScore},
        </if>
        <if test="isProdProb!=null">
            is_prod_prob=#{isProdProb},
        </if>
        <if test="prodEntryId!=null">
            prod_entry_id=#{prodEntryId},
        </if>
        <if test="prodEntryScore!=null">
            prod_entry_score=#{prodEntryScore},
        </if>
        <if test="isDangerProb!=null">
            is_danger_prob=#{isDangerProb},
        </if>
        <if test="level!=null">
            level=#{level},
        </if>
        <if test="dangerCategory!=null">
            danger_category=#{dangerCategory},
        </if>
        <if test="isPush!=null">
            is_push=#{isPush},
        </if>
        <if test="prodCategory!=null">
            prod_category=#{prodCategory},
        </if>
        <if test="isUse!=null">
            is_use=#{isUse},
        </if>
        <if test="isUse==1">
            status=1,
        </if>
        update_by=#{createBy}, update_date=now()
        where id=#{id} and is_delete=0;
        <if test="isUse==1">
            insert into t_danger_examine(id, danger_id, user_type, examine_user_id, create_by)
            value (replace(uuid(),"-",""), #{id}, 1, #{examineUserId}, #{createBy});
        </if>
    </update>

    <insert id="addDanger">
        INSERT INTO t_danger (id, no, region_id, address, content, before_pic, rectify_term,
        check_dept_id, check_user_id,
        check_time,
        <if test="isBuildProb!=null">
            is_build_prob,
        </if>
        build_entry_id, build_score, build_conversion_score,
        <if test="isProdProb!=null">
            is_prod_prob,
        </if>
        prod_entry_id, prod_entry_score,
        <if test="isDangerProb!=null">
            is_danger_prob,
        </if>
        level, danger_category,
        <if test="isPush!=null">
            is_push,
        </if>
        create_by,
        <if test="isUse!=null">
            is_use,
        </if>
        prod_category
        <if test="isUse==1">
            , status
        </if>
        )
        value (#{id}, #{no}, #{regionId}, #{address}, #{content}, #{beforePic}, #{rectifyTerm},
        <if test="checkDeptId!=null and checkDeptId!='' and checkUserId!=null and checkUserId!=''">
            #{checkDeptId}, #{checkUserId},
        </if>
        <if test="checkDeptId==null or checkDeptId=='' or checkUserId==null or checkUserId==''">
            (select main_dept from sys_user where id=#{createBy} and is_delete=0), #{createBy},
        </if>
        #{checkTime},
        <if test="isBuildProb!=null">
            #{isBuildProb},
        </if>
        #{buildEntryId}, #{buildScore}, #{buildConversionScore},
        <if test="isProdProb!=null">
            #{isProdProb},
        </if>
        #{prodEntryId}, #{prodEntryScore},
        <if test="isDangerProb!=null">
            #{isDangerProb},
        </if>
        #{level}, #{dangerCategory},
        <if test="isPush!=null">
            #{isPush},
        </if>
        #{createBy},
        <if test="isUse!=null">
            #{isUse},
        </if>
        #{prodCategory}
        <if test="isUse==1">
            , 1
        </if>
        );
        <if test="isUse==1">
            insert into t_danger_examine(id, danger_id, user_type, examine_user_id, create_by)
            value (replace(uuid(),"-",""), #{id}, 1, #{examineUserId}, #{createBy});
        </if>
    </insert>

    <select id="selectIsDangerExamine" resultType="java.lang.Integer">
        select status from t_danger where id=#{id} and is_delete=0
    </select>

    <update id="deleteDanger">
        update t_danger set
        is_delete=1, update_by=#{createBy}, update_date=now()
        where id=#{id} and is_delete=0;
        update t_danger_examine set
        is_delete=1, update_by=#{createBy}, update_date=now()
        where danger_id=#{id} and is_delete=0;
    </update>

    <select id="examineUserList" resultType="com.security.info.manage.dto.res.UserResDTO">
        select u.*, ue.real_name, d.org_name as dept_name, p.post_name as user_name
        from sys_dept as d
        left join sys_post as p on p.org_id=d.id and p.status=0 and p.is_delete=0
        left join sys_user_post as up on up.post_id=p.id
        left join sys_user as u on u.id=up.user_id and u.is_delete=0 and u.status=1
        left join sys_user_role as ur on u.id=ur.user_id
        left join sys_user_ext as ue on ue.user_id=u.id and ue.is_delete=0
        where p.audit_level=#{userType} and d.id in (
        <foreach collection="ids" index="index" item="id" separator=",">
            #{id}
        </foreach>
        )
        group by u.id
    </select>

    <select id="selectUserType" resultType="com.security.info.manage.dto.res.DangerExamineResDTO">
        select id, max(user_type) as user_type from t_danger_examine where danger_id=#{dangerId} and is_delete=0 and status=0
    </select>

    <select id="selectCheckUserId" resultType="java.lang.String">
        select check_user_id from t_danger where is_delete=0 and id=#{dangerId} and is_use=1
    </select>

    <update id="examineDanger">
        update t_danger_examine set
        examine_time=now(), opinion=#{opinion}, status=#{status}, update_by=#{userId}
        where id=#{id};
        <if test="status==1">
            insert into t_danger_examine(id, danger_id, user_type, examine_user_id, create_by)
            value (replace(uuid(),"-",""), #{dangerId}, #{userType}, #{examineUserId}, #{userId});
            <if test="userType==4">
                update t_danger set status=2, update_by=#{userId}, update_date=now() where id=#{dangerId} and is_delete=0;
            </if>
        </if>
        <if test="status==2">
            update t_danger set status=6, update_by=#{userId}, update_date=now() where id=#{dangerId} and is_delete=0;
        </if>
    </update>

    <update id="issueDanger">
        update t_danger set
        responsibility_dept_id=#{deptId},
        <if test="rectifyTerm!=null">
            rectify_term=#{rectifyTerm},
        </if>
        status=3, update_by=#{createBy}, update_date=now()
        where id=#{dangerId} and is_delete=0;
        update t_danger_examine set
        examine_time=now(), opinion=#{opinion}, status=1, update_by=#{createBy}
        where danger_id=#{dangerId} and status=0;
        <foreach collection="list" index="index" item="userId" separator=";">
            insert into t_danger_rectify(id, danger_id, rectify_user_id, create_by)
            value (replace(uuid(),"-",""), #{dangerId}, #{userId}, #{createBy})
        </foreach>
    </update>

    <update id="rectifyDanger">
        update t_danger set
        status=4, update_by=#{createBy}, update_date=now()
        where id=#{dangerId} and is_delete=0;
        update t_danger_rectify set
        rectify_time=now(), examine_user_id=#{userId}, examine_time=null,
        <if test="rectifyMeasure!=null">
            rectify_measure=#{rectifyMeasure},
        </if>
        <if test="afterPic!=null">
            after_pic=#{afterPic},
        </if>
        update_by=#{createBy}
        where danger_id=#{dangerId} and rectify_user_id=#{createBy};
        delete from t_danger_rectify where danger_id=#{dangerId} and rectify_user_id!=#{createBy};
    </update>

    <update id="rectifyExamineDanger">
        update t_danger_rectify set
        examine_time=now(), status=#{status}, update_by=#{createBy}, update_date=now()
        <if test="status==1">
            , check_user_status=1
        </if>
        where danger_id=#{dangerId} and is_delete=0;
        update t_danger set
        <if test="status==1">
            status=5,
        </if>
        <if test="status==2">
            status=6,
        </if>
        update_by=#{createBy}, update_date=now() where id=#{dangerId} and is_delete=0;
    </update>

    <update id="rectifyPassDanger">
        update t_danger_rectify set
        <if test="status==2">
            check_user_status=#{status},
        </if>
        <if test="status==3">
            check_user_status=0,
        </if>
        update_by=#{createBy}, update_date=now()
        where danger_id=#{dangerId} and is_delete=0;
        update t_danger set
        <if test="status==2">
            status=7,
        </if>
        <if test="status==3">
            status=3,
        </if>
        update_by=#{createBy}, update_date=now() where id=#{dangerId} and is_delete=0;
    </update>

    <select id="exportDanger" resultType="com.security.info.manage.dto.res.DangerExportResDTO">
        select d.id, d.no, d.check_time, r.name as region_name, d.address, d.content, d.rectify_term, d.build_score,
        d1.org_name as check_dept_name, ue.real_name as check_user_name, d.build_conversion_score, d.prod_category,
        d.prod_entry_score, d.level, d.danger_category, dr.rectify_measure, d2.org_name as responsibility_dept_name,
        ue1.real_name as rectify_user_name, e1.content as build_entry, ep1.plate_name as build_plate_name,
        e2.content as prod_entry, ep2.plate_name as prod_plate_name, group_concat(distinct f1.file_url) as before_pic,
        group_concat(distinct f2.file_url) as after_pic, dr.is_eliminate, d.responsibility_dept_id
        from t_danger as d
        left join t_region as r on r.id=d.region_id and r.is_delete=0 and r.status=0
        left join sys_user_ext as ue on d.check_user_id=ue.user_id and ue.status=0 and ue.is_delete=0
        left join sys_dept as d1 on d1.id=d.check_dept_id and d1.is_delete=0
        left join t_danger_rectify as dr on dr.danger_id=d.id and dr.is_delete=0
        left join sys_dept as d2 on d2.id=d.responsibility_dept_id and d2.is_delete=0
        left join sys_user_ext as ue1 on dr.rectify_user_id=ue1.user_id and ue1.status=0 and ue1.is_delete=0
        left join sys_entry as e1 on e1.id=d.build_entry_id
        left join sys_entry_plate as ep1 on e1.plate_id=ep1.id
        left join sys_entry as e2 on e2.id=d.prod_entry_id
        left join sys_entry_plate as ep2 on e2.plate_id=ep2.id
        left join sys_file as f1 on find_in_set(f1.id,d.before_pic)>0
        left join sys_file as f2 on find_in_set(f2.id,dr.after_pic)>0
        where d.is_use=1 and d.status=5
        group by d.id, dr.id
        order by d.check_time desc
    </select>

    <select id="dangerTypeStatistics" resultType="com.security.info.manage.dto.res.DangerTypeStatisticsResDTO">
        select a.* from (
        select "标准化建设" as type,
        (select count(*) from t_danger where is_build_prob=1 and is_use=1 and is_delete=0 and status!=5) as total,
        (select count(*) from t_danger where is_build_prob=1 and is_use=1 and is_delete=0
        and date_format(create_date, '%Y-%m')=date_format((last_day(subdate(#{date}, interval 1 month))), '%Y-%m')
        and status not in (5,6)) as last_legacy,
        (select count(*) from t_danger where is_build_prob=1 and is_use=1 and is_delete=0
        and date_format(create_date, '%Y-%m')=#{date}) as now_add,
        (select count(*) from t_danger where is_build_prob=1 and is_use=1 and is_delete=0 and status=5
        and date_format(create_date, '%Y-%m')=#{date}) as now_solve,
        (select count(*) from t_danger where is_build_prob=1 and is_use=1 and is_delete=0 and status not in (5,6)
        and date_format(create_date, '%Y-%m')=#{date}) as now_legacy,
        (select count(*) from t_danger where is_build_prob=1 and is_use=1 and is_delete=0 and is_push=1
        and date_format(create_date, '%Y-%m')=#{date}) as cycle_add_broadcast,
        (select count(*) from t_danger where is_build_prob=1 and is_use=1 and is_delete=0 and is_push=1 and status=5
        and date_format(create_date, '%Y-%m')=#{date}) as cycle_solve_broadcast
        union all
        select "安全生产标准化" as type,
        (select count(*) from t_danger where is_prod_prob=1 and is_use=1 and is_delete=0 and status!=5) as total,
        (select count(*) from t_danger where is_prod_prob=1 and is_use=1 and is_delete=0
        and date_format(create_date, '%Y-%m')=date_format((last_day(subdate(#{date}, interval 1 month))), '%Y-%m')
        and status not in (5,6)) as last_legacy,
        (select count(*) from t_danger where is_prod_prob=1 and is_use=1 and is_delete=0
        and date_format(create_date, '%Y-%m')=#{date}) as now_add,
        (select count(*) from t_danger where is_prod_prob=1 and is_use=1 and is_delete=0 and status=5
        and date_format(create_date, '%Y-%m')=#{date}) as now_solve,
        (select count(*) from t_danger where is_prod_prob=1 and is_use=1 and is_delete=0 and status not in (5,6)
        and date_format(create_date, '%Y-%m')=#{date}) as now_legacy,
        (select count(*) from t_danger where is_prod_prob=1 and is_use=1 and is_delete=0 and is_push=1
        and date_format(create_date, '%Y-%m')=#{date}) as cycle_add_broadcast,
        (select count(*) from t_danger where is_prod_prob=1 and is_use=1 and is_delete=0 and is_push=1 and status=5
        and date_format(create_date, '%Y-%m')=#{date}) as cycle_solve_broadcast
        union all
        select "安全隐患" as type,
        (select count(*) from t_danger where is_danger_prob=1 and is_use=1 and is_delete=0 and status!=5) as total,
        (select count(*) from t_danger where is_danger_prob=1 and is_use=1 and is_delete=0
        and date_format(create_date, '%Y-%m')=date_format((last_day(subdate(#{date}, interval 1 month))), '%Y-%m')
        and status not in (5,6)) as last_legacy,
        (select count(*) from t_danger where is_danger_prob=1 and is_use=1 and is_delete=0
        and date_format(create_date, '%Y-%m')=#{date}) as now_add,
        (select count(*) from t_danger where is_danger_prob=1 and is_use=1 and is_delete=0 and status=5
        and date_format(create_date, '%Y-%m')=#{date}) as now_solve,
        (select count(*) from t_danger where is_danger_prob=1 and is_use=1 and is_delete=0 and status not in (5,6)
        and date_format(create_date, '%Y-%m')=#{date}) as now_legacy,
        (select count(*) from t_danger where is_danger_prob=1 and is_use=1 and is_delete=0 and is_push=1
        and date_format(create_date, '%Y-%m')=#{date}) as cycle_add_broadcast,
        (select count(*) from t_danger where is_danger_prob=1 and is_use=1 and is_delete=0 and is_push=1 and status=5
        and date_format(create_date, '%Y-%m')=#{date}) as cycle_solve_broadcast
        ) as a
    </select>

    <select id="selectAllDeptName" resultType="com.security.info.manage.dto.res.DangerDeptStatisticsResDTO">
        select distinct id as dept_id, org_name as dept_name from sys_dept where parent_id=1 and is_delete=0
        order by sort
    </select>

    <select id="dangerDeptStatistics" resultType="com.security.info.manage.dto.res.DangerDeptStatisticsResDTO$DeptStatistics">
        select a.* from (
        select
        (select count(*) from t_danger where is_use=1 and is_delete=0 and check_dept_id=#{deptId}
        and date_format(create_date, '%Y-%m')=#{date}) as now_add,
        (select count(*) from t_danger where is_use=1 and is_delete=0 and responsibility_dept_id=#{deptId}
        and date_format(create_date, '%Y-%m')=#{date}) as total,
        (select count(*) from t_danger where is_use=1 and is_delete=0 and responsibility_dept_id=#{deptId}
        and date_format(create_date, '%Y-%m')=#{date} and status=5) as now_solve,
        (select count(*) from t_danger where is_use=1 and is_delete=0 and responsibility_dept_id=#{deptId}
        and date_format(create_date, '%Y-%m')=#{date} and status not in (5,6)) as legacy
        ) as a
    </select>

    <select id="selectRootRegion" resultType="com.security.info.manage.dto.res.DangerRegionStatisticsResDTO">
        select id as region_id, name as region_name from t_region
        where is_delete=0 and status=0
        <if test="regionId==null">
            and parent_id=0
        </if>
        <if test="regionId!=null">
            and parent_id=#{regionId}
        </if>
    </select>

    <select id="selectBodyRegion" resultType="java.lang.String">
        select id from t_region where is_delete=0 and status=0 and parent_id=#{regionId}
    </select>

    <select id="dangerRegionStatistics" resultType="com.security.info.manage.dto.res.DangerRegionStatisticsResDTO">
        select
        (select count(*) from t_danger where region_id in (
        <foreach collection="regions" index="index" item="region" separator=",">
            #{region}
        </foreach>
        ) and is_use=1 and is_delete=0 and status!=5) as total,
        (select count(*) from t_danger where region_id in (
        <foreach collection="regions" index="index" item="region" separator=",">
            #{region}
        </foreach>
        ) and is_use=1 and is_delete=0
        and date_format(create_date, '%Y-%m')=date_format((last_day(subdate(#{date}, interval 1 month))), '%Y-%m')
        and status not in (5,6)) as last_legacy,
        (select count(*) from t_danger where region_id in (
        <foreach collection="regions" index="index" item="region" separator=",">
            #{region}
        </foreach>
        ) and is_use=1 and is_delete=0
        and date_format(create_date, '%Y-%m')=#{date}) as now_add,
        (select count(*) from t_danger where region_id in (
        <foreach collection="regions" index="index" item="region" separator=",">
            #{region}
        </foreach>
        ) and is_use=1 and is_delete=0 and status=5
        and date_format(create_date, '%Y-%m')=#{date}) as now_solve,
        (select count(*) from t_danger where region_id in (
        <foreach collection="regions" index="index" item="region" separator=",">
            #{region}
        </foreach>
        ) and is_use=1 and is_delete=0 and status not in (5,6)
        and date_format(create_date, '%Y-%m')=#{date}) as now_legacy,
        (select count(*) from t_danger where region_id in (
        <foreach collection="regions" index="index" item="region" separator=",">
            #{region}
        </foreach>
        ) and is_use=1 and is_delete=0 and is_push=1
        and date_format(create_date, '%Y-%m')=#{date}) as cycle_add_broadcast,
        (select count(*) from t_danger where region_id in (
        <foreach collection="regions" index="index" item="region" separator=",">
            #{region}
        </foreach>
        ) and is_use=1 and is_delete=0 and is_push=1 and status=5
        and date_format(create_date, '%Y-%m')=#{date}) as cycle_solve_broadcast
    </select>

    <select id="listUnitStatistics" resultType="java.lang.String">
        select response_unit from t_region where status=0 and is_delete=0
        and parent_ids like CONCAT('%','0,',#{regionId},'%') and response_unit!='' and response_unit is not null
    </select>

    <select id="listWorkAreaStatistics" resultType="java.lang.String">
        select response_work_area from t_region where status=0 and is_delete=0
        and parent_ids like CONCAT('%','0,',#{regionId},'%') and response_work_area!='' and response_work_area is not null
    </select>

    <select id="newAddStatistics" resultType="com.security.info.manage.dto.res.DangerChartStatisticsResDTO$ChartStatistics">
        SELECT
        month(d.create_date) AS month,
        COUNT(d.id) as num
        FROM
        t_danger as d left join t_region as r on r.id=d.region_id and r.status=0 and r.is_delete=0
        WHERE d.is_use=1 and d.is_delete=0 and region_id=#{regionId} and year(d.create_date)=year(now())
        <if test="unit!=null and unit!=''">
            and r.response_unit=#{unit}
        </if>
        <if test="workArea!=null and workArea!=''">
            and r.response_work_area=#{workArea}
        </if>
        GROUP BY month
        ORDER BY month
    </select>

    <select id="legacyStatistics" resultType="com.security.info.manage.dto.res.DangerChartStatisticsResDTO$ChartStatistics">
        SELECT
        month(d.create_date) AS month,
        COUNT(d.id) as num
        FROM
        t_danger as d left join t_region as r on r.id=d.region_id and r.status=0 and r.is_delete=0
        WHERE d.is_use=1 and d.is_delete=0 and region_id=#{regionId} and year(d.create_date)=year(now())
        and d.status not in (5,6)
        <if test="unit!=null and unit!=''">
            and r.response_unit=#{unit}
        </if>
        <if test="workArea!=null and workArea!=''">
            and r.response_work_area=#{workArea}
        </if>
        GROUP BY month
        ORDER BY month
    </select>

    <select id="dangerMonthStatistics" resultType="com.security.info.manage.dto.res.DangerMonthStatisticsResDTO">
        select case when count(id) is null then 0 else count(id) end as num
        from t_danger where is_danger_prob=1 and danger_category=#{type}
        and is_delete=0 and date_format(check_time, '%Y-%m')=#{month}
    </select>
</mapper>