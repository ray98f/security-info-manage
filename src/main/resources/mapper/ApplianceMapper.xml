<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.security.info.manage.mapper.ApplianceMapper">

    <select id="getTypeBody" resultType="com.security.info.manage.dto.res.ApplianceTypeTreeResDTO">
        select id, parent_id, parent_code, name, code, status from t_appliance_type where parent_id!="0" and is_delete=0
        <if test="status!=null">
            and status=#{status}
        </if>
    </select>

    <select id="getTypeRoot" resultType="com.security.info.manage.dto.res.ApplianceTypeTreeResDTO">
        select id, parent_id, parent_code, name, code, status from t_appliance_type where parent_id="0" and is_delete=0
        <if test="status!=null">
            and status=#{status}
        </if>
    </select>

    <select id="getTypeDetail" resultType="com.security.info.manage.dto.res.ApplianceTypeTreeResDTO">
        select id, parent_id, parent_code, name, code, status from t_appliance_type where id=#{id} and is_delete=0
    </select>

    <select id="selectHadChild" resultType="java.lang.Integer">
        select count(1) from t_appliance_type where parent_id=#{id} and is_delete=0 and status=0 limit 1
    </select>

    <insert id="addType">
        insert into t_appliance_type(id, parent_id, parent_code, name, code, status, create_by)
        value (#{id}, #{parentId}, #{parentCode}, #{name}, #{code}, #{status}, #{userId})
    </insert>

    <update id="modifyType">
        update t_appliance_type set
        <if test="parentId!=null">
            parent_id=#{parentId},
        </if>
        <if test="parentCode!=null">
            parent_code=#{parentCode},
        </if>
        <if test="name!=null">
            name=#{name},
        </if>
        <if test="code!=null">
            code=#{code},
        </if>
        <if test="status!=null">
            status=#{status},
        </if>
        update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <update id="deleteType">
        update t_appliance_type set
        is_delete=1, update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <insert id="importAppliance">
        <if test="list.size()>0">
            insert into t_appliance_user_config(id, user_name, user_no, appliance_name, appliance_code, appliance_type, user_id, num, receiving_time, effective_time, remark, create_by) values
            <foreach collection="list" index="index" item="appliance" separator=",">
                (#{appliance.id}, #{appliance.userName}, #{appliance.userNo}, #{appliance.applianceName}, #{appliance.applianceCode},
                (select id from t_appliance_type where name=#{trainDetail.applianceType} and status=0 and is_delete=0 limit 1),
                (select user_id from sys_user_ext where real_name=#{trainDetail.userName}
                <if test="appliance.userNo!=null and appliance.userNo!=''">
                    and user_no=#{appliance.userNo}
                </if>
                and status=0 and is_delete=0),
                #{appliance.num}, #{appliance.receivingTime}, #{appliance.effectiveTime}, #{appliance.remark}, #{appliance.createBy})
            </foreach>
        </if>
    </insert>

    <select id="listApplianceConfig" resultType="com.security.info.manage.dto.res.ApplianceConfigResDTO">
        select auc.id, auc.user_id, auc.user_name, auc.user_no, auc.appliance_name, auc.appliance_code, auc.appliance_type as appliance_type_id,
        auc.num, auc.receiving_time, auc.effective_time, auc.last_id, auc.remark, auc.status, at.name as appliance_type_name from t_appliance_user_config as auc
        left join t_appliance_type as at on at.id=auc.appliance_type and at.is_delete=0 and at.status=0
        where auc.is_delete=0
        order by auc.create_date desc
    </select>

    <update id="changeAppliance">
        update t_appliance_user_config set remark=#{remark}, status=2 where id=#{id} and is_delete=0;
        insert into t_appliance_user_config(id, user_id, user_name, user_no, appliance_name, appliance_code,
        appliance_type, num, receiving_time, effective_time, last_id, create_by)
        value (replace(uuid(),"-",""), #{userId}, #{userName}, #{userNo}, #{applianceName}, #{applianceCode},
        #{applianceType}, #{num}, #{receivingTime}, #{effectiveTime}, #{id}, #{createBy});
    </update>

    <update id="taskStatus">
        update t_appliance_user_config set
        status=1
        where now()>effective_time and status=0 and is_delete=0
    </update>
</mapper>